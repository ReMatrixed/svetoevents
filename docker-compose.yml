# Обратите внимание: для production-сред рекомендуется использовать reverse-proxy

services:
  svetoevents-proxy:
    image: traefik:v3.2
    container_name: svetoevents-proxy
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  svetoevents-db:
    image: postgres
    container_name: svetoevents-db
    restart: always
    shm_size: 256mb
    # Для production-сред рекомендуется закрыть данные порты
    # ports:
    #   - 5432:5432
    volumes:
      - svetoevents-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DB}

  svetoevents-bouncer:
    image: bitnami/pgbouncer:latest
    container_name: svetoevents-bouncer
    restart: always
    depends_on:
      - svetoevents-db
    # Для production-сред рекомендуется закрыть данные порты
    # ports:
    #   - 6432:6432
    environment:
      PGBOUNCER_DATABASE: ${POSTGRESQL_DB}
      # Измение POOL_MODE - требование Prisma ORM
      PGBOUCER_POOL_MODE: transaction
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_HOST: svetoevents-db
      POSTGRESQL_PORT: 5432

  svetoevents-backend:
    image: svetoevents/backend
    container_name: svetoevents-backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - svetoevents-db
      - svetoevents-bouncer
    environment:
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DB: ${POSTGRESQL_DB}
      POSTGRESQL_HOST: svetoevents-bouncer
      POSTGRESQL_PORT: 6432
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)
      - traefik.http.services.backend.loadbalancer.server.port=8000

  svetoevents-frontend:
    image: svetoevents/frontend
    container_name: svetoevents-frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - svetoevents-backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`localhost`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000

volumes:
  svetoevents-db-data:
    external: true